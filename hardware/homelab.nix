# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/a122d1d2-f5a4-4ee8-ab5c-6c3f575af691";
      fsType = "ext4";
    };
    
  # Create Raid0 with two HDD
  # mdadm --create --verbose /dev/md0 --level=linear --raid-devices=2 /dev/sdb /dev/sda
  # Creafe filesystem on md0 `sudo mkfs.ext4 /dev/md0`
  # sudo mount /dev/md0 /mnt/
  # Get label of new disk `sudo lsblk -o name,mountpoint,label,size,uuid`

    
  # fileSystems."/ipfs" =
  #   { device = "/dev/disk/by-uuid/0d347b22-a4bb-5347-e634-0ba7e092e475";
  #     fsType = "ext4";
  #     autoFormat = true;
  #     autoResize = true;
  #   };
    
  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/019A-95D4";
      fsType = "vfat";
    };
    

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp42s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;
}
